<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html id="html" xmlns="http://www.w3.org/1999/xhtml">

<head id="head" >
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>
 Manipulation ABR
</title>

<meta name="keywords" content=""/>
<meta name="description" content=""/>
<link href="http://10.34.128.10:8181/res/styles/default/style.css" rel="stylesheet" type="text/css"/><link href="http://10.34.128.10:8181/res/styles/default/node.css" rel="stylesheet" type="text/css"/><link href="http://10.34.128.10:8181/res/styles/default/tutorial.css" rel="stylesheet" type="text/css"/><link href="http://10.34.128.10:8181/res/styles/default/menu.css" rel="stylesheet" type="text/css"/><link href="http://10.34.128.10:8181/res/styles/default/context-menu.css" rel="stylesheet" type="text/css"/><script src="http://10.34.128.10:8181/res/js/prototype.js"></script><script src="http://10.34.128.10:8181/res/js/scriptaculous.js"></script><script src="http://10.34.128.10:8181/res/js/essilab.js"></script>


</head>
<body id="body" >

<div id="container" >

<div id="headerWrapper" >

<div id="header" >







<div id="menuGlobal" class="Menu ">
	<ul>
								
	<li class="MenuItem">
		<a href="http://10.34.128.10:8181/cours">Support de cours</a>
			</li>
								
	<li class="MenuItem">
		<a href="http://10.34.128.10:8181/exercises">Exercices</a>
			</li>
								
	<li class="MenuItem">
		<a href="http://10.34.128.10:8181/student/_points">Résultats</a>
			</li>
			</ul>
</div>

</div>
</div>
<div id="content" >

<div class="ContentPane" >



<div class="Tutorial">
    <h1>Manipulation ABR</h1>

<h1>TP4. Ex8 - ABR</h1>

<table>
<tr><td>Temps de référence</td><td>25 mn</td></tr>
<tr><td>Temps estimé</td><td>35 mn</td></tr>
<tr><td>Temps max</td><td>1h00 mn</td></tr>
<tr><td>Répertoire de rendu</td><td>~/seminaire/tp4/abr</td></tr>
<tr><td>Fichier(s) de rendu</td><td>abr.c/h</td></tr>
</table>
<br/>
<h2>Enoncé</h2>
<p>Un arbre binaire est une structure par nature récursive. Il peut être soit vide ( Ø ), soit la composée d'un noeud racine et de deux sous-arbres ( < o, G, D > ).

<p>Un ABR, arbre binaire de recherche est ordonné.</p>
<p>Pour un noeud donné</p>
<ul>
<li>Son sous-arbre gauche contient des valeurs < ou = à sa valeur</li>
<li>Son sous-arbre gauche contient des valeurs > à sa valeur</li>
</ul>
<p>Exemple d'arbre binaire</p>
<pre class="ScreenConsole">

             6
        4        9
      2   5    7   10
     1 3 
</pre>
<p><b>abr.h à implémenter</b></p>
<pre class="ScreenEditor">
 
 	typedef struct s_node {
 	    int value;
 		struct s_node * left;
 		struct s_node * right;
 	} t_node;
 	
 	abr_insert(t_node** root, int value);
    // Display from the example : 1 2 3 4 5 6 7 9 10
    abr_display_asc(t_node* root);
     	
</pre>

<h2>Travail attendu</h2>
<ol>
  <li>Dans le répertoire 'tp4', créer un sous répertoire 'abr'</li>
  <li>Créer le fichier abr.c</li>
  <li>Implémenter le programme dans le fichier c adéquat</li>
  <li>Les compiler, corriger les erreurs si besoin.</li>
  <li>Les copier dans leur répertoire de rendu.</li>
</ol>

</div>
</div>
<br class="Cleaner" />

</div>
</div>
</body>
</html>