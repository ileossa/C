<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html id="html" xmlns="http://www.w3.org/1999/xhtml">

<head id="head" >
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>
 TP1. Ex2. Command Line
</title>

<meta name="keywords" content=""/>
<meta name="description" content=""/>
<link href="http://10.34.128.10:8181/res/styles/default/style.css" rel="stylesheet" type="text/css"/><link href="http://10.34.128.10:8181/res/styles/default/node.css" rel="stylesheet" type="text/css"/><link href="http://10.34.128.10:8181/res/styles/default/tutorial.css" rel="stylesheet" type="text/css"/><link href="http://10.34.128.10:8181/res/styles/default/menu.css" rel="stylesheet" type="text/css"/><link href="http://10.34.128.10:8181/res/styles/default/context-menu.css" rel="stylesheet" type="text/css"/><script src="http://10.34.128.10:8181/res/js/prototype.js"></script><script src="http://10.34.128.10:8181/res/js/scriptaculous.js"></script><script src="http://10.34.128.10:8181/res/js/essilab.js"></script>


</head>
<body id="body" >

<div id="container" >

<div id="headerWrapper" >

<div id="header" >







<div id="menuGlobal" class="Menu ">
	<ul>
								
	<li class="MenuItem">
		<a href="http://10.34.128.10:8181/cours">Support de cours</a>
			</li>
								
	<li class="MenuItem">
		<a href="http://10.34.128.10:8181/exercises">Exercices</a>
			</li>
								
	<li class="MenuItem">
		<a href="http://10.34.128.10:8181/student/_points">Résultats</a>
			</li>
			</ul>
</div>

</div>
</div>
<div id="content" >

<div class="ContentPane" >



<div class="Tutorial">
<h1>TP1. Ex2. Command Line</h1>
<table>
<tr><td>Temps de référence</td><td>3 mn</td></tr>
<tr><td>Temps estimé</td><td>10 mn</td></tr>
<tr><td>Temps max</td><td>15 mn</td></tr>
<tr><td>Répertoire de rendu</td><td>~/seminaire/tp1/command_line</td></tr>
<tr><td>Fichier(s) de rendu</td><td>display_two_params.c</td></tr>
</table>

<h2>Enoncé</h2>

<p>En C, comme dans la plupart des langages, il est possible de transmettre des données au programme en ligne de commande. Pour cela il suffit juste de les ajouter à la suite du fichier binaire. Pour séparer les données, on utilise le caractère d'espacement.</p>
<strong>Exemple</strong>

<strong>source : helloworld.c</strong>
<pre class="ScreenConsole">
./monProgramme donnee1 donnee2 donnee2 etc...
</pre>

<p>Ces données sont transmises dans les variables situées en paramètres de la fonction main(int argc, char** argv). La variable argc, de type int, contient le nombre de données transmises et char** argv, les valeurs de ces données.</p>

<p>Le programme ci-dessous récupère les 2 premières données, puis les affiche.</p>

<pre class="ScreenEditor">
#include <stdio.h>

int main(int argc, char** argv){
  if (3 > argc) {
    printf("Nombre de paramètres insuffisants\n");
    return 1; 
  }
  printf("Parametre 1 : %s \n", argv[1]);
  printf("Parametre 2 : %s \n", argv[2]);
  return 0;
}
</pre>

<p>Si le programme fonctionne, lorsque vous le lancer avec moins de deux paramètres le message suivant apparaît :  Nombre de paramètres insuffisants, sinon les deux premiers paramètres sont affichés, préfixé de « Paramètre 1 : » et « Paramètre 2 : »</p>

<pre class="ScreenConsole">
./monProgramme donnee1 donnee2
Parametre 1 : donnee1
Parametre 1 : donnee2
</pre>

<h2>Travail attendu</h2>
<ol>
<li>Dans le répertoire 'tp1', créer un sous répertoire 'command_line'</li>
<li>Créer un fichier display_two_params.c</li>
<li>Y recopier le programme ci-dessus, sauvegarder.</li>
<li>Le compiler, corriger les erreurs si besoin.</li>
<li>Le copier dans son répertoire de rendu.</li>
</ol>



</div>
</div>
<br class="Cleaner" />

</div>
</div>
</body>
</html>